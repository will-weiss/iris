{{! This template outlines how individual nodes of the AST are compiled to JS expressions }}

{{! Iris nodes are one of the following: linestart, newline, text, partial, variable, and section }}
  {{! linestart: the start of a line }}
  {{! newline: a line break }}
  {{! text: static content in the template }}
  {{! partialRef: a reference to another template }}
  {{! variable: a value given by looking up a key in the current context }}
  {{! section: a block conditionally rendered depending on looking up a key in the current context }}
    {{! inverted: rendered once for falsy values and empty lists }}
    {{! non-inverted: rendered once per item for non-empty lists and once for other truthy values }}


{{! linestart nodes return the indentation level for partial templates }}
{{#linestart}}
  {{^ofPartial}}""{{/ofPartial}}
  {{#ofPartial}}indentation{{/ofPartial}}
{{/linestart}}

{{! newline nodes return a newline character }}
{{#newline}}
  "\n"
{{/newline}}

{{! text nodes return the quoted text value of the node }}
{{#text}}
  {{{text}}}
{{/text}}

{{! partialRef nodes return the result of the compiled function of that partial with the current context }}
{{#partialRef}}
  {{{name}}}(context, "{{{indentation}}}")
{{/partialRef}}

{{! For variable nodes, the cursor is moved to the location of the variable }}
{{! Then the value of the  }}
{{#variable}}
  (cursor == null ? "" : "" + cursor){{#escaped}}
    .replace("&", "&amp;").replace('"', "&quot;").replace("<", "&lt;").replace(">", "&gt;")
  {{/escaped}}
{{/variable}}

{{#section}}
  {{^inverted}}
    (Array.isArray(cursor) ? cursor : (cursor ? [cursor] : [])).map(function(data) {
      var cursor;
      var context = data && typeof data === 'object' ? Object.assign(Object.create(this), data) : this;
      return (""{{#nodes}} + ({{> moveCursor}} {{> node}}){{/nodes}});
    }, context).join("")
  {{/inverted}}
  {{#inverted}}
    (!cursor || cursor.length === 0
      ? (""{{#nodes}} + ({{> moveCursor}} {{> node}}){{/nodes}})
      : "")
  {{/inverted}}
{{/section}}